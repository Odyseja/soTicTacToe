<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><!--This file was converted to xhtml by LibreOffice - see http://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--><head profile="http://dublincore.org/documents/dcmi-terms/"><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/><title xml:lang="en-US">- no title specified</title><meta name="DCTERMS.title" content="" xml:lang="en-US"/><meta name="DCTERMS.language" content="en-US" scheme="DCTERMS.RFC4646"/><meta name="DCTERMS.source" content="http://xml.openoffice.org/odf2xhtml"/><meta name="DCTERMS.issued" content="2015-06-16T09:40:24.028335489" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.modified" content="2015-06-16T13:43:40.051865343" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.provenance" content="" xml:lang="en-US"/><meta name="DCTERMS.subject" content="," xml:lang="en-US"/><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" hreflang="en"/><link rel="schema.DCTERMS" href="http://purl.org/dc/terms/" hreflang="en"/><link rel="schema.DCTYPE" href="http://purl.org/dc/dcmitype/" hreflang="en"/><link rel="schema.DCAM" href="http://purl.org/dc/dcam/" hreflang="en"/><style type="text/css">
	@page {  }
	table { border-collapse:collapse; border-spacing:0; empty-cells:show }
	td, th { vertical-align:top; font-size:12pt;}
	h1, h2, h3, h4, h5, h6 { clear:both }
	ol, ul { margin:0; padding:0;}
	li { list-style: none; margin:0; padding:0;}
	<!-- "li span.odfLiEnd" - IE 7 issue-->
	li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }
	span.footnodeNumber { padding-right:1em; }
	span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }
	* { margin:0;}
	.P1 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:center ! important; }
	.P10 { font-size:16pt; font-family:Liberation Serif; writing-mode:page; text-align:center ! important; font-weight:bold; }
	.P11 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P12 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P13 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P14 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P15 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P16 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P17 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P18 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P19 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P2 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P20 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P21 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P22 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P23 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P24 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P25 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P26 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P27 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P28 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P29 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P3 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P4 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P5 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; }
	.P6 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; font-style:italic; }
	.P7 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; font-style:italic; }
	.P8 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; font-style:italic; }
	.P9 { font-size:14pt; font-family:Liberation Serif; writing-mode:page; text-align:left ! important; font-style:italic; }
	<!-- ODF styles with no properties representable as CSS -->
	.Numbering_20_Symbols .T1 .T10 .T11 .T12 .T13 .T14 .T15 .T16 .T17 .T18 .T19 .T2 .T3 .T4 .T5 .T6 .T7 .T8 .T9  { }
	</style></head><body dir="ltr" style="max-width:21.59cm;margin-top:2cm; margin-bottom:2cm; margin-left:2cm; margin-right:2cm; writing-mode:lr-tb; "><p class="P10">Kółko i krzyżyk</p><p class="P1">Aleksandra Bańkowska</p><p class="P1">Systemy operacyjne</p><p class="P1"> </p><ol><li><p class="P11" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>Zastosowane technologie<span class="odfLiEnd"/> </p><ol><li><p class="P11" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>sockety<span class="odfLiEnd"/> </p><ol><li><p class="P12" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>dziedziny internet – TCP/IP. Wybór pomiędzy tym protokołem, a UDP był oczywisty. W przypadku gry szczególnie nie możemy sobie pozwolić na wysyłanie pakietów w przestrzeń, gracze powinni być połączeni, oraz mieć pełną informację o tym, czy pakiety docierają<span class="odfLiEnd"/> </p></li><li><p class="P13" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>dziedziny Unix – <span class="T2">z tego połączenia korzysta klient będący hostem w grze.</span><span class="odfLiEnd"/> </p></li><li><p class="P12" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">3.</span>select – <span class="T1">wykorzystany w celu zmniejszenia obciążenia procesora.</span><span class="odfLiEnd"/> </p></li></ol></li><li><p class="P11" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span><span class="T3">p</span>rocesy<span class="odfLiEnd"/> </p><ol><li><p class="P14" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>uruchomienie nowej gry (host): funkcja będąca głównym programem, po pobraniu od użytkownika niezbędnych informacji, forkuje nowy proces dla serwera (proces potomny), uruchamia serwer funkcją execl oraz lokalnego (socket UNIX) klienta<span class="odfLiEnd"/> </p></li><li><p class="P15" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>połączenie do gry:  funkcja będąca głównym programem, po pobraniu od użytkownika niezbędnych informacji, uruchamia zdalnego (socket <span class="T5">Internet</span>)  klienta funkcją execl<span class="odfLiEnd"/> </p></li><li><p class="P16" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">3.</span>gra lokalna -  <span class="T4">funkcja będąca głównym programem, po pobraniu od użytkownika niezbędnych informacji, forkuje nowy procesi uruchamia funkcją execl dwóch (socket UNIX) klientów lokalnych</span><span class="odfLiEnd"/> </p></li></ol></li><li><p class="P11" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">3.</span>sygnały<span class="odfLiEnd"/> </p><ol><li><p class="P17" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span><span class="T7">zarówno klient, jak I serwer</span> przechwytuje sygnał SIGINT, <span class="T6">w celu przekierowania go przez funkcję czyszczącą, zarejestrowaną w atexit. Funkcja ta przesyła informację o zakończeniu działania do pozostałych procesów poprzez sockety</span><span class="odfLiEnd"/> </p></li></ol></li><li><p class="P11" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">4.</span>zapis do pliku<span class="odfLiEnd"/> </p><ol><li><p class="P18" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>lokalnie, na komputerze klienta zapisuję <span class="T8">do pliku results.txt </span>wyniki w postaci:<span class="odfLiEnd"/> </p></li></ol></li></ol></li></ol><p class="P2"> </p><p class="P2">"Player: nazwa gracza<span> Winner: nazwa wygranego</span><span> Looser: nazwa przegranego\n"</span></p><p class="P2"> </p><ol><li><ol><li><ol><li><p class="P19" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>Korzystam z funkcji fopen, <span class="T9">fclose</span> oraz fprintf, <span class="T9">ze względu na to, że to ostatnie udostępnia prosty sposób formatowania tekstu</span><span class="odfLiEnd"/> </p></li></ol></li></ol></li></ol><p class="P3"> </p><ol><li><p class="P29" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>Dodatkowe <span class="T10">problemy</span><span class="odfLiEnd"/> </p><ol><li><p class="P20" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>Trudność z wpisywaniem współrzędnych<span class="odfLiEnd"/> </p><ol><li><p class="P21" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>Ponieważ mimo opisanej planszy podawanie koordynatów mogłoby sprawiać użytkownikowi problem, za każdym razem musi on potwierdzić, że właśnie taki ruch chce wykonać, po sprawdzeniu jakie faktyczne zmiany wprowadziłby na planszy<span class="odfLiEnd"/> </p></li><li><p class="P22" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>Mój program jest odporny na wpisywanie wartości nie będących liczbą (<span class="T12">oraz</span> <span class="T12">l</span>iczbą mieszczącą się w zakresie). <span class="T12">Żeby to osiągnąć, sprawdzam wartość zwracaną przez scanf oraz za każdym razem czyszczę bufor z nadprogramowych znaków.</span><span class="odfLiEnd"/> </p></li></ol></li><li><p class="P23" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>Prezentacja <span class="T11">wygranego układu</span><span class="odfLiEnd"/> </p><ol><li><p class="P24" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>Żeby zaznaczyć wygrywającą kombinację koloruję <span class="T13">wybrane znaki</span> flagami <span class="T14">odpowiadającymi za zadane kolory</span>.<span class="odfLiEnd"/> </p></li></ol></li></ol></li></ol><p class="P4"> </p><p class="P6">#define KRED  "\x1B[31m"</p><p class="P6">#define RESET "\033[0m"</p><p class="P6"> </p><p class="P7">if(win[i][j]==<span class="T15">true</span>) printf(KRED "%c  " RESET, board[i][j]);</p><p class="P8"> </p><ol><li><ol><li><p class="P23" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">3.</span>Rozmiar <span class="T17">I wyświetlanie</span> planszy<span class="odfLiEnd"/> </p><ol><li><p class="P25" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>zgodnie z treścią zadania, gra miała być prowadzona na nieskończonej planszy. Ze względu na ograniczenia spowodowane potrzebą wyświetlania planszy dla gracza, <span class="T16">jest ona w moim programie maksymalnie duża. </span><span class="odfLiEnd"/> </p></li><li><p class="P26" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">2.</span>Obaj klienci przesyłają do serwera rozmiary swojego okna. Sprawdzają to w następujący sposób:<span class="odfLiEnd"/> </p></li></ol></li></ol></li></ol><p class="P5"> </p><p class="P9">struct winsize w;</p><p class="P9">ioctl(0, TIOCGWINSZ, &amp;w);</p><p class="P9">msg.x=w.ws_row;</p><p class="P9">msg.y=w.ws_col;</p><p class="P5"> </p><ol><li><ol><li><ol><li><p class="P27" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">3.</span>Serwer poprawia wymiary w taki sposób, żeby wypisywanie planszy mogło być czytelne, wybiera minimum z nich i odsyła do graczy, którzy na tej podstawie ustawiają swoje plansze. <span class="T19">Ze względu na sposób formatowania oraz numerację kolumn i wierszy, mając na względzie wygląd oraz czytelność planszy, dałam twarde ograniczenie na wymiary planszy, które mogą wynoscić najwyżej 99x99</span><span class="odfLiEnd"/> </p></li></ol></li><li><p class="P23" style="margin-left:cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">4.</span>Informowanie o wyjściu przeciwnika z gry<span class="odfLiEnd"/> </p><ol><li><p class="P28" style="margin-left:0cm;"><span class="Numbering_20_Symbols" style="display:block;float:left;min-width:0.635cm;">1.</span>Aby <span class="T18">gracz oczekujący na swoją turę nie czekał na ruch gracza, który zakończył działanie swojej aplikacji, w przypadku wyłączenia klienta wysyłane są odpowiednie komunikaty poprzez serwer, a gracz oczekujący otrzymuje informację “Your opponent left”</span><span class="odfLiEnd"/> </p></li></ol></li></ol></li></ol></body></html>